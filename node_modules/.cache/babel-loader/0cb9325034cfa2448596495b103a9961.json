{"ast":null,"code":"import _slicedToArray from \"/home/jaskaran/Downloads/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/jaskaran/Downloads/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jaskaran/Downloads/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jaskaran/Downloads/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jaskaran/Downloads/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jaskaran/Downloads/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jaskaran/Downloads/tic-tac-toe/src/game.js\";\nimport React, { Component } from 'react';\nimport './index.css';\nimport GameBoard from './gameBoard';\n\nvar Game =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Game, _Component);\n\n  function Game() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Game)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      nextPlayerIsX: true\n    };\n\n    _this.handleChange = function (currentIndex) {\n      var history = _this.state.history;\n      var current = history[history.length - 1].squares;\n\n      if (_this.checkWinner(current) || current[currentIndex]) {\n        return;\n      }\n\n      current[currentIndex] = _this.state.nextPlayerIsX ? 'X' : 'O';\n\n      _this.setState({\n        history: history.concat([{\n          squares: current\n        }]),\n        nextPlayerIsX: !_this.state.nextPlayerIsX\n      });\n    };\n\n    _this.checkWinner = function (squares) {\n      var lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n      for (var i = 0; i < lines.length; i++) {\n        var _lines$i = _slicedToArray(lines[i], 3),\n            a = _lines$i[0],\n            b = _lines$i[1],\n            c = _lines$i[2];\n\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) return squares[a];\n      }\n\n      return null;\n    };\n\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var history = this.state.history;\n      var current = history[history.length - 1].squares;\n      var status;\n      var winner = this.checkWinner(current);\n\n      if (winner) {\n        status = \"Winner is \".concat(winner);\n        window.alert(\"Winner is \".concat(winner));\n      } else status = this.state.nextPlayerIsX ? 'X' : '0';\n\n      return React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"game-board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(GameBoard, {\n        squares: current,\n        status: status,\n        click: function click(index) {\n          return _this2.handleChange(index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"game-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        key: move,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Game;\n}(Component);\n\nexport default Game;","map":{"version":3,"sources":["/home/jaskaran/Downloads/tic-tac-toe/src/game.js"],"names":["React","Component","GameBoard","Game","state","history","squares","Array","fill","nextPlayerIsX","handleChange","currentIndex","current","length","checkWinner","setState","concat","lines","i","a","b","c","status","winner","window","alert","index","move"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './index.css'; \nimport GameBoard from './gameBoard';\n\nclass Game extends Component {\n\n    state = {\n      history:[{squares:Array(9).fill(null)}],\n      nextPlayerIsX:true\n    }\n\n    handleChange = (currentIndex)=>{\n        const history = this.state.history;\n        const current = history[history.length-1].squares;\n        if (this.checkWinner(current) || current[currentIndex]) {\n            return;\n          }\n        current[currentIndex] =this.state.nextPlayerIsX ? 'X':'O';\n        this.setState({history:history.concat([{squares:current}]),\n        nextPlayerIsX :!this.state.nextPlayerIsX});\n        \n    }\n\n    \n    checkWinner = (squares)=>{\n      const lines = [\n          [0,1,2],\n          [3,4,5],\n          [6,7,8],\n          [0,3,6],\n          [1,4,7],\n          [2,5,8],\n          [0,4,8],\n          [2,4,6]\n      ]\n      \n      for(let i=0;i<lines.length;i++)\n      {\n          const[a,b,c] = lines[i];\n          if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c])\n              return squares[a];\n      }\n      return null;\n  }\n    render() {\n      const history = this.state.history;\n      const current = history[history.length-1].squares;\n      let status;\n      const winner = this.checkWinner(current);\n        if(winner)\n        {\n            status = `Winner is ${winner}`;\n            window.alert(`Winner is ${winner}`);\n        }\n        else\n            status = this.state.nextPlayerIsX ? 'X' : '0';\n\n        \n\n        return (\n        <div className=\"game\">\n        <div className=\"game-board\">\n          <GameBoard squares = {current} status = {status} click = {(index)=>this.handleChange(index)}/>\n        </div>\n        <div className=\"game-info\">\n          <li key = {move}>\n          \n          </li>\n        </div>\n        </div>);\n    }\n}\n \nexport default Game;"]},"metadata":{},"sourceType":"module"}