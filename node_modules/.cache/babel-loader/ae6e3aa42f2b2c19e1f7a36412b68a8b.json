{"ast":null,"code":"import _classCallCheck from \"/home/jaskaran/Downloads/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jaskaran/Downloads/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jaskaran/Downloads/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jaskaran/Downloads/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jaskaran/Downloads/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jaskaran/Downloads/tic-tac-toe/src/gameBoard.js\";\nimport React, { Component } from 'react';\nimport Square from './square';\nimport './index.css';\n\nvar GameBoard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GameBoard, _Component);\n\n  function GameBoard() {\n    _classCallCheck(this, GameBoard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GameBoard).apply(this, arguments));\n  }\n\n  _createClass(GameBoard, [{\n    key: \"renderSquare\",\n    // state = {\n    // squares: Array(9).fill(null),\n    //nextPlayerIsX:true\n    //}\n    // handleChange = (currentIndex)=>{\n    //     const localSquares = this.state.squares.slice();\n    //     if (this.checkWinner(localSquares) || localSquares[currentIndex]) {\n    //         return;\n    //       }\n    //     localSquares[currentIndex] =this.state.nextPlayerIsX ? 'X':'O';\n    //     this.setState({squares:localSquares,nextPlayerIsX :!this.state.nextPlayerIsX});\n    // }\n    value: function renderSquare(index) {\n      React.createElement(Square, {\n        index: index,\n        click: this.props.handleChange,\n        value: squares[index],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          squares = _this$props.squares,\n          handleChange = _this$props.handleChange,\n          status = _this$props.status;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Next player: \", status), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n    }\n  }]);\n\n  return GameBoard;\n}(Component);\n\nexport default GameBoard;","map":{"version":3,"sources":["/home/jaskaran/Downloads/tic-tac-toe/src/gameBoard.js"],"names":["React","Component","Square","GameBoard","index","props","handleChange","squares","status","renderSquare"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,aAAP;;IAEMC,S;;;;;;;;;;;;;AACF;AACG;AACC;AACF;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;iCAEaC,K,EACb;AACI,0BAAC,MAAD;AAAQ,QAAA,KAAK,EAAIA,KAAjB;AAAwB,QAAA,KAAK,EAAI,KAAKC,KAAL,CAAWC,YAA5C;AAA0D,QAAA,KAAK,EAAGC,OAAO,CAACH,KAAD,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH;;;6BAEQ;AAAA,wBACiC,KAAKC,KADtC;AAAA,UACEE,OADF,eACEA,OADF;AAAA,UACUD,YADV,eACUA,YADV;AAAA,UACuBE,MADvB,eACuBA,MADvB;AAEL,aACA,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAsCA,MAAtC,CADJ,EAEI;AAAK,QAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKC,YAAL,CAAkB,CAAlB,CADL,EAEK,KAAKA,YAAL,CAAkB,CAAlB,CAFL,EAGK,KAAKA,YAAL,CAAkB,CAAlB,CAHL,CAFJ,EAOI;AAAK,QAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKA,YAAL,CAAkB,CAAlB,CADL,EAEK,KAAKA,YAAL,CAAkB,CAAlB,CAFL,EAGK,KAAKA,YAAL,CAAkB,CAAlB,CAHL,CAPJ,EAYI;AAAK,QAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKA,YAAL,CAAkB,CAAlB,CADL,EAEK,KAAKA,YAAL,CAAkB,CAAlB,CAFL,EAGK,KAAKA,YAAL,CAAkB,CAAlB,CAHL,CAZJ,CADA;AAqBH;;;;EA3CmBR,S;;AA8CxB,eAAeE,SAAf","sourcesContent":["import React, { Component } from 'react';   \nimport Square from './square'\nimport './index.css';\n\nclass GameBoard extends Component {\n    // state = {\n       // squares: Array(9).fill(null),\n        //nextPlayerIsX:true\n      //}\n\n    // handleChange = (currentIndex)=>{\n    //     const localSquares = this.state.squares.slice();\n    //     if (this.checkWinner(localSquares) || localSquares[currentIndex]) {\n    //         return;\n    //       }\n    //     localSquares[currentIndex] =this.state.nextPlayerIsX ? 'X':'O';\n    //     this.setState({squares:localSquares,nextPlayerIsX :!this.state.nextPlayerIsX});\n    // }\n\n    renderSquare(index)\n    {\n        <Square index = {index} click = {this.props.handleChange} value ={squares[index]}/>\n    }\n\n    render() {\n        const {squares,handleChange,status} = this.props;\n        return (\n        <React.Fragment>\n            <div className=\"status\">Next player: {status}</div>\n            <div className = \"board-row\">\n                {this.renderSquare(0)}\n                {this.renderSquare(1)}\n                {this.renderSquare(2)}\n            </div> \n            <div className = \"board-row\">\n                {this.renderSquare(3)}\n                {this.renderSquare(4)}\n                {this.renderSquare(5)}\n            </div> \n            <div className = \"board-row\">\n                {this.renderSquare(6)}\n                {this.renderSquare(7)}\n                {this.renderSquare(8)}\n            </div> \n        </React.Fragment>\n        \n    );\n    }\n}\n \nexport default GameBoard;"]},"metadata":{},"sourceType":"module"}