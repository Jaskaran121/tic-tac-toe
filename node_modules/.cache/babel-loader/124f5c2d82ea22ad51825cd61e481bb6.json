{"ast":null,"code":"import _slicedToArray from \"/home/jaskaran/Downloads/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/jaskaran/Downloads/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jaskaran/Downloads/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jaskaran/Downloads/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jaskaran/Downloads/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jaskaran/Downloads/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jaskaran/Downloads/tic-tac-toe/src/game.js\";\nimport React, { Component } from 'react';\nimport './index.css';\nimport GameBoard from './gameBoard';\n\nvar Game =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Game, _Component);\n\n  function Game() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Game)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      nextPlayerIsX: true,\n      moveNumber: 0\n    };\n\n    _this.handleChange = function (currentIndex) {\n      var history = _this.state.history;\n      var current = history[history.length - 1].squares.slice();\n\n      if (_this.checkWinner(current) || current[currentIndex]) {\n        return;\n      }\n\n      current[currentIndex] = _this.state.nextPlayerIsX ? 'X' : 'O';\n      history.push({\n        squares: current\n      });\n\n      _this.setState({\n        history: history,\n        nextPlayerIsX: !_this.state.nextPlayerIsX,\n        moveNumber: history.length - 1\n      });\n    };\n\n    _this.jumpTo = function (move) {\n      _this.setState({\n        moveNumber: move,\n        nextPlayerIsX: move % 2 === 0\n      });\n    };\n\n    _this.restart = function () {\n      _this.setState({\n        history: [{\n          squares: Array(9).fill(null)\n        }],\n        nextPlayerIsX: true,\n        moveNumber: 0\n      });\n    };\n\n    _this.checkWinner = function (squares) {\n      //Possible winner combinations in game tic-tac-toe\n      var lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n      for (var i = 0; i < lines.length; i++) {\n        var _lines$i = _slicedToArray(lines[i], 3),\n            a = _lines$i[0],\n            b = _lines$i[1],\n            c = _lines$i[2];\n\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) return squares[a];\n      }\n\n      return null;\n    };\n\n    _this.divStyle = function () {\n      padding: '40px';\n    };\n\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var history = this.state.history.slice();\n      var current = history[this.state.moveNumber].squares;\n      var status;\n      var winner = this.checkWinner(current);\n\n      if (winner) {\n        status = \"Winner is \".concat(winner);\n        window.alert(\"Winner is \".concat(winner));\n      } else status = this.state.nextPlayerIsX ? 'X' : '0';\n\n      var moves = history.map(function (step, move) {\n        var display = move ? 'Go to move #' + move : 'Go to game start';\n        return React.createElement(\"li\", {\n          key: move,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.jumpTo(move);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, display));\n      });\n      return React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"game-board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(GameBoard, {\n        squares: current,\n        status: status,\n        click: function click(index) {\n          return _this2.handleChange(index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.restart,\n        style: this.divStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Restart Game\")), React.createElement(\"div\", {\n        className: \"game-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, moves)));\n    }\n  }]);\n\n  return Game;\n}(Component);\n\nexport default Game;","map":{"version":3,"sources":["/home/jaskaran/Downloads/tic-tac-toe/src/game.js"],"names":["React","Component","GameBoard","Game","state","history","squares","Array","fill","nextPlayerIsX","moveNumber","handleChange","currentIndex","current","length","slice","checkWinner","push","setState","jumpTo","move","restart","lines","i","a","b","c","divStyle","padding","status","winner","window","alert","moves","map","step","display","index"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;;IAEMC,I;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACNC,MAAAA,OAAO,EAAC,CAAC;AAACC,QAAAA,OAAO,EAACC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd;AAAT,OAAD,CADF;AAENC,MAAAA,aAAa,EAAC,IAFR;AAGNC,MAAAA,UAAU,EAAC;AAHL,K;;UAMRC,Y,GAAe,UAACC,YAAD,EAAgB;AAC3B,UAAMP,OAAO,GAAG,MAAKD,KAAL,CAAWC,OAA3B;AACA,UAAMQ,OAAO,GAAGR,OAAO,CAACA,OAAO,CAACS,MAAR,GAAe,CAAhB,CAAP,CAA0BR,OAA1B,CAAkCS,KAAlC,EAAhB;;AAEA,UAAI,MAAKC,WAAL,CAAiBH,OAAjB,KAA6BA,OAAO,CAACD,YAAD,CAAxC,EAAwD;AACpD;AACD;;AAEHC,MAAAA,OAAO,CAACD,YAAD,CAAP,GAAuB,MAAKR,KAAL,CAAWK,aAAX,GAA2B,GAA3B,GAA+B,GAAtD;AACAJ,MAAAA,OAAO,CAACY,IAAR,CAAa;AAACX,QAAAA,OAAO,EAACO;AAAT,OAAb;;AACA,YAAKK,QAAL,CAAc;AACZb,QAAAA,OAAO,EAAEA,OADG;AAEZI,QAAAA,aAAa,EAAE,CAAC,MAAKL,KAAL,CAAWK,aAFf;AAGZC,QAAAA,UAAU,EAACL,OAAO,CAACS,MAAR,GAAe;AAHd,OAAd;AAKH,K;;UAGDK,M,GAAS,UAACC,IAAD,EAAQ;AACf,YAAKF,QAAL,CAAc;AAACR,QAAAA,UAAU,EAACU,IAAZ;AAAiBX,QAAAA,aAAa,EAAEW,IAAI,GAAC,CAAN,KAAW;AAA1C,OAAd;AACD,K;;UAEDC,O,GAAU,YAAK;AACb,YAAKH,QAAL,CAAc;AACZb,QAAAA,OAAO,EAAC,CAAC;AAACC,UAAAA,OAAO,EAACC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd;AAAT,SAAD,CADI;AAEZC,QAAAA,aAAa,EAAC,IAFF;AAGZC,QAAAA,UAAU,EAAC;AAHC,OAAd;AAKD,K;;UACDM,W,GAAc,UAACV,OAAD,EAAW;AACvB;AACA,UAAMgB,KAAK,GAAG,CACV,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CADU,EAEV,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAFU,EAGV,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAHU,EAIV,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAJU,EAKV,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CALU,EAMV,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CANU,EAOV,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAPU,EAQV,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CARU,CAAd;;AAWA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACD,KAAK,CAACR,MAApB,EAA2BS,CAAC,EAA5B,EACA;AAAA,sCACmBD,KAAK,CAACC,CAAD,CADxB;AAAA,YACUC,CADV;AAAA,YACYC,CADZ;AAAA,YACcC,CADd;;AAEI,YAAGpB,OAAO,CAACkB,CAAD,CAAP,IAAclB,OAAO,CAACkB,CAAD,CAAP,KAAelB,OAAO,CAACmB,CAAD,CAApC,IAA2CnB,OAAO,CAACkB,CAAD,CAAP,KAAelB,OAAO,CAACoB,CAAD,CAApE,EACI,OAAOpB,OAAO,CAACkB,CAAD,CAAd;AACP;;AACD,aAAO,IAAP;AACC,K;;UAEDG,Q,GAAW,YAAM;AACfC,MAAAA,OAAO,EAAE;AACV,K;;;;;;;6BACM;AAAA;;AACP,UAAMvB,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAAX,CAAmBU,KAAnB,EAAhB;AACA,UAAMF,OAAO,GAAGR,OAAO,CAAC,KAAKD,KAAL,CAAWM,UAAZ,CAAP,CAA+BJ,OAA/C;AAEA,UAAIuB,MAAJ;AACA,UAAMC,MAAM,GAAG,KAAKd,WAAL,CAAiBH,OAAjB,CAAf;;AACE,UAAGiB,MAAH,EACA;AACID,QAAAA,MAAM,uBAAgBC,MAAhB,CAAN;AACAC,QAAAA,MAAM,CAACC,KAAP,qBAA0BF,MAA1B;AACH,OAJD,MAMID,MAAM,GAAG,KAAKzB,KAAL,CAAWK,aAAX,GAA2B,GAA3B,GAAiC,GAA1C;;AAEJ,UAAMwB,KAAK,GAAG5B,OAAO,CAAC6B,GAAR,CAAY,UAACC,IAAD,EAAOf,IAAP,EAAgB;AACxC,YAAMgB,OAAO,GAAGhB,IAAI,GAAG,iBAAiBA,IAApB,GAA2B,kBAA/C;AACA,eACE;AAAI,UAAA,GAAG,EAAEA,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAQ,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACD,MAAL,CAAYC,IAAZ,CAAN;AAAA,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA2CgB,OAA3C,CADF,CADF;AAIC,OANW,CAAd;AAQA,aACA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,OAAO,EAAIvB,OAAtB;AAA+B,QAAA,MAAM,EAAIgB,MAAzC;AAAiD,QAAA,KAAK,EAAI,eAACQ,KAAD;AAAA,iBAAS,MAAI,CAAC1B,YAAL,CAAkB0B,KAAlB,CAAT;AAAA,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAQ,QAAA,OAAO,EAAI,KAAKhB,OAAxB;AAAiC,QAAA,KAAK,EAAE,KAAKM,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,CADA,EAKA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKM,KAAL,CADF,CALA,CADA;AAUH;;;;EA9FchC,S;;AAiGnB,eAAeE,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport './index.css'; \nimport GameBoard from './gameBoard';\n\nclass Game extends Component {\n\n    state = {\n      history:[{squares:Array(9).fill(null)}],\n      nextPlayerIsX:true,\n      moveNumber:0\n    }\n    \n    handleChange = (currentIndex)=>{\n        const history = this.state.history;\n        const current = history[history.length-1].squares.slice();\n        \n        if (this.checkWinner(current) || current[currentIndex]) {\n            return;\n          }\n        \n        current[currentIndex] =this.state.nextPlayerIsX ? 'X':'O';\n        history.push({squares:current}); \n        this.setState({\n          history: history,\n          nextPlayerIsX: !this.state.nextPlayerIsX,\n          moveNumber:history.length-1\n        });      \n    }\n\n    //Setting the value of moveNumber and always the nextPlayer Will be x if the moveNumber is even\n    jumpTo = (move)=>{\n      this.setState({moveNumber:move,nextPlayerIsX:(move%2)===0});\n    }\n    //Restart the game from the starting\n    restart = () =>{\n      this.setState({\n        history:[{squares:Array(9).fill(null)}],\n        nextPlayerIsX:true,\n        moveNumber:0\n      });\n    }\n    checkWinner = (squares)=>{\n      //Possible winner combinations in game tic-tac-toe\n      const lines = [\n          [0,1,2],\n          [3,4,5],\n          [6,7,8],\n          [0,3,6],\n          [1,4,7],\n          [2,5,8],\n          [0,4,8],\n          [2,4,6]\n      ]\n      \n      for(let i=0;i<lines.length;i++)\n      {\n          const[a,b,c] = lines[i];\n          if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c])\n              return squares[a];\n      }\n      return null;\n      }\n\n      divStyle = () => {\n        padding: '40px'\n      };\n    render() {\n      const history = this.state.history.slice();\n      const current = history[this.state.moveNumber].squares;\n      \n      let status;\n      const winner = this.checkWinner(current);\n        if(winner)\n        {\n            status = `Winner is ${winner}`;\n            window.alert(`Winner is ${winner}`);\n        }\n        else\n            status = this.state.nextPlayerIsX ? 'X' : '0';\n\n        const moves = history.map((step, move) => {\n          const display = move ? 'Go to move #' + move : 'Go to game start';\n          return (\n            <li key={move}>\n              <button onClick={() => this.jumpTo(move)}>{display}</button>\n            </li>\n        );});\n\n        return (\n        <div className=\"game\">\n        <div className=\"game-board\">\n          <GameBoard squares = {current} status = {status} click = {(index)=>this.handleChange(index)}/>\n          <button onClick = {this.restart} style={this.divStyle}>Restart Game</button>\n        </div>\n        <div className=\"game-info\">\n          <ol>{moves}</ol>\n        </div>\n        </div>);\n    }\n}\n \nexport default Game;"]},"metadata":{},"sourceType":"module"}